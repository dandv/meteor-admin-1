// Generated by CoffeeScript 1.7.1
(function() {
  var AdminDashboard;

  AdminDashboard = {
    schemas: {},
    alertSuccess: function(message) {
      return Session.set('adminSuccess', message);
    },
    alertFailure: function(message) {
      return Session.set('adminError', message);
    },
    clearAlerts: function() {
      Session.set('adminSuccess', null);
      return Session.set('adminError', null);
    },
    checkAdmin: function() {
      if (!Roles.userIsInRole(Meteor.userId(), ['admin'])) {
        Meteor.call('adminCheckAdmin');
        if (typeof (typeof AdminConfig !== "undefined" && AdminConfig !== null ? AdminConfig.nonAdminRedirectRoute : void 0) === "string") {
          return Router.go(AdminConfig.nonAdminRedirectRoute);
        }
      }
    },
    adminRoutes: ['adminDashboard', 'adminDashboardUsersNew', 'adminDashboardUsersView', 'adminDashboardUsersEdit', 'adminDashboardView', 'adminDashboardNew', 'adminDashboardEdit', 'adminDashboardDetail'],
    collectionLabel: function(collection) {
      if (collection === 'Users') {
        return 'Users';
      } else if ((collection != null) && typeof AdminConfig.collections[collection].label === 'string') {
        return AdminConfig.collections[collection].label;
      } else {
        return Session.get('admin_collection');
      }
    }
  };

  AdminDashboard.schemas.newUser = new SimpleSchema({
    email: {
      type: String,
      label: "Email address"
    },
    chooseOwnPassword: {
      type: Boolean,
      label: 'Let this user choose their own password with an email',
      defaultValue: true
    },
    password: {
      type: String,
      label: 'Password',
      optional: true
    },
    sendPassword: {
      type: Boolean,
      label: 'Send this user their password by email',
      optional: true
    }
  });

  AdminDashboard.schemas.sendResetPasswordEmail = new SimpleSchema({
    _id: {
      type: String
    }
  });

  AdminDashboard.schemas.changePassword = new SimpleSchema({
    _id: {
      type: String
    },
    password: {
      type: String
    }
  });

}).call(this);

//# sourceMappingURL=AdminDashboard.map
